{"format_version":"1.10.0","animation_controllers":{"controller.animation.hfrlc.pigeon.walk":{"states":{"default":{"transitions":[{"idle":"q.ground_speed < 0.2 && q.property('hfrlc:states') == 'none' && !q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"walk":"q.ground_speed >= 0.2 && q.property('hfrlc:states') == 'none' && !q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"start_fly":"q.property('hfrlc:states') == 'none' && q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"}],"blend_transition":0.2,"blend_via_shortest_path":true},"idle":{"transitions":[{"walk":"q.ground_speed >= 0.2 && q.property('hfrlc:states') == 'none' && !q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"start_fly":"q.property('hfrlc:states') == 'none' && q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"default":"q.property('hfrlc:is_death') || q.property('hfrlc:states') != 'none'"}],"animations":["idle"],"blend_transition":0.2,"blend_via_shortest_path":true},"walk":{"transitions":[{"idle":"q.ground_speed < 0.2 && q.property('hfrlc:states') == 'none' && !q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"start_fly":"q.property('hfrlc:states') == 'none' && q.property('hfrlc:flying') && !q.property('hfrlc:is_death')"},{"default":"q.property('hfrlc:is_death') || q.property('hfrlc:states') != 'none'"}],"animations":["walk"],"blend_transition":0.2,"blend_via_shortest_path":true},"start_fly":{"transitions":[{"default":"q.property('hfrlc:is_death') || q.property('hfrlc:states') != 'none'"},{"fly_slow":"q.all_animations_finished && !q.is_avoiding_mobs"},{"fly_fast":"q.all_animations_finished && q.is_avoiding_mobs"}],"animations":["start_fly"],"blend_transition":0.2,"blend_via_shortest_path":true},"attack_fly":{"transitions":[{"fly_slow":"!q.is_avoiding_mobs && q.state_time >= 1"},{"fly_fast":"q.is_avoiding_mobs && q.state_time >= 1"}],"blend_transition":0.2,"blend_via_shortest_path":true},"fly_slow":{"transitions":[{"default":"q.property('hfrlc:is_death')"},{"plan":"q.property('hfrlc:states') == 'landing'"},{"attack_fly":"q.is_delayed_attacking"},{"fly_fast":"q.is_avoiding_mobs"}],"animations":["fly_slow"],"blend_transition":0.2,"blend_via_shortest_path":true},"fly_fast":{"transitions":[{"default":"q.property('hfrlc:is_death')"},{"plan":"q.property('hfrlc:states') == 'landing'"},{"attack_fly":"q.is_delayed_attacking"},{"fly_slow":"!q.is_avoiding_mobs"}],"animations":[{"fly_fast":"!q.is_delayed_attacking"}],"blend_transition":0.2,"blend_via_shortest_path":true},"plan":{"transitions":[{"default":"q.property('hfrlc:is_death')"},{"land":"q.is_on_ground"}],"animations":["plan"],"blend_transition":0.2,"blend_via_shortest_path":true},"land":{"transitions":[{"default":"q.property('hfrlc:is_death') || q.all_animations_finished"}],"animations":["land"],"blend_transition":0.2,"blend_via_shortest_path":true}}},"controller.animation.hfrlc.pigeon":{"initial_state":"default","states":{"default":{"transitions":[{"death_ground":"q.property('hfrlc:is_death') && !q.property('hfrlc:flying')"},{"death_fly_start":"q.property('hfrlc:is_death') && q.property('hfrlc:flying')"},{"attack":"q.is_delayed_attacking"},{"eat":"q.property('hfrlc:states') == 'eat' && !q.property('hfrlc:flying')"}],"blend_transition":0.2,"blend_via_shortest_path":true},"death_ground":{"animations":["death_ground"]},"death_fly_start":{"transitions":[{"death_fly_idle":"q.all_animations_finished"}],"animations":["death_fly_start"],"blend_transition":0.2,"blend_via_shortest_path":true},"death_fly_idle":{"transitions":[{"death_fly_end":"q.is_on_ground"}],"animations":["death_fly_idle"],"blend_transition":0.2,"blend_via_shortest_path":true},"death_fly_end":{"animations":["death_fly_end"]},"attack":{"transitions":[{"death_ground":"q.property('hfrlc:is_death') && !q.property('hfrlc:flying')"},{"death_fly_start":"q.property('hfrlc:is_death') && q.property('hfrlc:flying')"},{"default":"q.all_animations_finished"}],"animations":["attack"],"blend_transition":0.2,"blend_via_shortest_path":true},"eat":{"transitions":[{"death_ground":"q.property('hfrlc:is_death') && !q.property('hfrlc:flying')"},{"death_fly_start":"q.property('hfrlc:is_death') && q.property('hfrlc:flying')"},{"default":"q.property('hfrlc:states') != 'eat' || q.property('hfrlc:flying')"}],"animations":["eat"],"blend_transition":0.2,"blend_via_shortest_path":true}}}}}